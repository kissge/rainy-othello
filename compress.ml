(* Usage: ocaml compress.ml > out.ml *)

(* let printer ppf = Format.fprintf ppf "\"%s\"";;
   #install_printer printer;; *)

(* Rewrite this *)
let data = ["\019\018";
"\019\018\026\020\009";
"\019\018\026\020\010";
"\019\018\026\020\010\042";
"\019\018\026\020\010\043\012\011\021\029\044";
"\019\018\026\020\011";
"\019\018\026\020\011\025\017\043\029\021\044\037\046";
"\019\018\026\020\011\025\029";
"\019\018\026\020\011\025\033";
"\019\018\026\020\011\034";
"\019\018\026\020\012";
"\019\018\026\020\013";
"\019\018\026\020\013\021\012";
"\019\018\026\020\013\034";
"\019\018\026\020\029";
"\019\018\026\020\029\034";
"\019\018\026\020\029\043\011";
"\019\018\026\020\029\043\011\013\012\021\010";
"\019\018\026\020\029\043\011\013\012\021\044";
"\019\018\026\020\029\043\011\021\012\010\013\034\017\003\004\005\025";
"\019\018\026\020\029\043\011\034\010";
"\019\018\026\020\029\043\044";
"\019\018\026\020\029\043\044\025";
"\019\018\026\020\029\043\044\025\012";
"\019\018\026\020\029\043\044\025\051\030";
"\019\018\026\020\029\043\044\037\021\030";
"\019\018\026\020\029\043\044\037\045";
"\019\018\026\020\045";
"\019\018\026\020\045\033\021";
"\019\018\026\020\045\034\021\044\043\052";
"\019\018\026\020\045\044";
"\019\018\037\020";
"\019\018\044\020";
"\019\020";
"\019\034";
"\019\034\043\020\029\037";
"\019\034\043\020\029\042\021";
"\019\034\043\020\029\042\026";
"\019\034\043\020\029\042\026\018";
"\019\034\043\020\029\042\033";
"\019\034\043\020\029\042\037\018\026\033";
"\019\034\043\020\029\042\037\018\026\033\012";
"\019\034\043\020\029\042\037\018\026\033\012\044";
"\019\034\043\020\029\042\037\018\026\033\012\044\010";
"\019\034\043\020\029\042\037\018\026\033\012\044\011\045\017\038\025\022";
"\019\034\043\020\029\042\037\018\026\033\013\044";
"\019\034\043\020\029\042\037\018\026\033\013\044\011\045\052\030";
"\019\034\043\020\029\042\037\018\026\033\013\044\052";
"\019\034\043\020\029\042\037\018\026\033\013\044\052\045";
"\019\034\043\020\029\042\037\018\026\033\025";
"\019\034\043\020\029\042\037\021";
"\019\034\043\020\037";
"\019\034\044\011";
"\019\034\044\011\042";
"\019\034\044\011\042\043\033\037\052\045\029\021";
"\019\034\044\037\026";
"\019\034\044\037\043";
"\019\034\044\037\043\020\029\021\046\042";
"\019\034\044\037\043\020\029\021\046\052\053";
"\019\034\045\011";
"\019\034\045\037\044";
"\019\034\045\037\044\020\018";
"\019\034\045\037\044\020\018\011";
"\019\034\045\037\044\020\018\011\029\021\012\005\013\022";
"\019\034\045\037\044\020\018\021";
"\019\034\045\037\044\020\018\021\026\025\033\010\016\017\011\002\004\012\005\003\001";
"\019\034\045\037\044\020\018\021\029";
"\019\034\045\037\044\020\018\052";
"\019\034\045\037\044\020\026";
"\019\034\045\037\044\020\029";
"\019\034\045\037\044\020\043\052\051\042\021\026\029";
"\019\034\045\037\044\020\043\052\051\042\021\026\029\010\018\011\033\013";
"\019\034\045\037\044\020\043\053\046";
"\019\034\045\037\044\020\043\053\046\026";
"\019\034\045\037\044\020\043\053\046\052";
"\019\034\045\037\044\053";
"\019\034\045\037\044\053\038\020"]

let rec escape_string str =
  let len = String.length str in
  let escape_char c = match c with
      '\010' -> "\\010" (* Line feed *)
    | '\011' -> "\\011" (* Vertical tab *)
    | '\012' -> "\\012" (* New page *)
    | '\013' -> "\\013" (* Carriage return *)
    | '\018' -> "\\018" (* Device Control 2 *)
    | '"' -> "\\\""
    | s -> String.make 1 s in
  let rec escape_string' str len =
    if len = 0 then ""
    else let s = str.[0] in
	 let str = String.sub str 1 (len - 1) in
	 escape_char s ^ escape_string' str (len - 1)
  in escape_string' str len

let rec print_strlist ls =
  match ls with
    [] -> ()
  | s::ls ->
    print_string ("\"" ^ (escape_string s) ^ "\";"); print_strlist ls
;;

let _ =
  print_string "let data = [";
  print_strlist data;
  print_endline "]"
